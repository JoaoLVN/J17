// Copyright (C) 2016  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "06/28/2017 14:34:29"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          J17
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module J17_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [7:0] treg_LCD_DATA;
reg [17:0] Switches;
reg clk;
reg in;
// wires                                               
wire LCD_BLON;
wire [7:0] LCD_DATA;
wire LCD_EN;
wire LCD_ON;
wire LCD_RS;
wire LCD_RW;
wire [8:0] LEDG;
wire [17:0] LEDR;

// assign statements (if any)                          
assign LCD_DATA = treg_LCD_DATA;
J17 i1 (
// port map - connection between master ports and signals/registers   
	.LCD_BLON(LCD_BLON),
	.LCD_DATA(LCD_DATA),
	.LCD_EN(LCD_EN),
	.LCD_ON(LCD_ON),
	.LCD_RS(LCD_RS),
	.LCD_RW(LCD_RW),
	.LEDG(LEDG),
	.LEDR(LEDR),
	.Switches(Switches),
	.clk(clk),
	.in(in)
);
initial 
begin 
#1000000 $finish;
end 
// LCD_DATA[ 7 ]
initial
begin
	treg_LCD_DATA[7] = 1'bZ;
end 
// LCD_DATA[ 6 ]
initial
begin
	treg_LCD_DATA[6] = 1'bZ;
end 
// LCD_DATA[ 5 ]
initial
begin
	treg_LCD_DATA[5] = 1'bZ;
end 
// LCD_DATA[ 4 ]
initial
begin
	treg_LCD_DATA[4] = 1'bZ;
end 
// LCD_DATA[ 3 ]
initial
begin
	treg_LCD_DATA[3] = 1'bZ;
end 
// LCD_DATA[ 2 ]
initial
begin
	treg_LCD_DATA[2] = 1'bZ;
end 
// LCD_DATA[ 1 ]
initial
begin
	treg_LCD_DATA[1] = 1'bZ;
end 
// LCD_DATA[ 0 ]
initial
begin
	treg_LCD_DATA[0] = 1'bZ;
end 
// Switches[ 17 ]
initial
begin
	Switches[17] = 1'b0;
end 
// Switches[ 16 ]
initial
begin
	Switches[16] = 1'b0;
end 
// Switches[ 15 ]
initial
begin
	Switches[15] = 1'b0;
end 
// Switches[ 14 ]
initial
begin
	Switches[14] = 1'b0;
end 
// Switches[ 13 ]
initial
begin
	Switches[13] = 1'b0;
end 
// Switches[ 12 ]
initial
begin
	Switches[12] = 1'b0;
end 
// Switches[ 11 ]
initial
begin
	Switches[11] = 1'b0;
end 
// Switches[ 10 ]
initial
begin
	Switches[10] = 1'b0;
end 
// Switches[ 9 ]
initial
begin
	Switches[9] = 1'b0;
end 
// Switches[ 8 ]
initial
begin
	Switches[8] = 1'b0;
end 
// Switches[ 7 ]
initial
begin
	Switches[7] = 1'b0;
end 
// Switches[ 6 ]
initial
begin
	Switches[6] = 1'b0;
end 
// Switches[ 5 ]
initial
begin
	Switches[5] = 1'b0;
end 
// Switches[ 4 ]
initial
begin
	Switches[4] = 1'b0;
end 
// Switches[ 3 ]
initial
begin
	Switches[3] = 1'b0;
end 
// Switches[ 2 ]
initial
begin
	Switches[2] = 1'b0;
end 
// Switches[ 1 ]
initial
begin
	Switches[1] = 1'b0;
end 
// Switches[ 0 ]
initial
begin
	Switches[0] = 1'b0;
end 

// clk
always
begin
	clk = 1'b0;
	clk = #25000 1'b1;
	#25000;
end 

// in
initial
begin
	in = 1'b0;
	in = #720000 1'b1;
	in = #40000 1'b0;
end 
endmodule

